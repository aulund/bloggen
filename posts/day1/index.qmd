---
title: "Day 1"
date: 2024-06-10
categories: [blog]
author: "August Lundholm"
description: "Reflections and notes from day 1."
image: "Data_life_cycle.png"
draft: false
---

# Day 1 of medbioinfo

This is my first blog post! Here are my reflections and notes from day 1.

## What I Learned Today
- We talked about good practice in storing and processing data
- How to set up a Quarto blog
- The importance of YAML frontmatter
- How to write content in Markdown

## Data management and reproducible research
- We discussed the data lifecycle and what different stages the data goes through. from planning for what data to be collected to eventually being reused. The data lifecycle can be long and involve multiple people and thats  why its important to work according to FAIR-principles.
- FAIR - Findable Accesible Interoperable and Reusable. Working according to this concept ensure that data collected for one question can be used for many more. 
    - This relies on good data management practices where you work by research documentation, data organisation, information security, ethics and legislation.
- Data is often not complete after first collection, first processing or first analysis. things are being added or moved between project altered as the work goes along. which makes it important to store data in a good system in a separate folder of raw-data which you dont touch. 
    - some tips for good practice with documenting your data: 
        - Document your methods and workflows.
        - Document where and when you downloaded data.
        - Document the versions of the software that you ran.

- Other things that we will practice later in the course is: 
    - Employing version control via GIT
    - Shareable environments to make your scripts reproducible.
    - containers to run scripts on other operating systems
    - workflow managers, that keep track of all of the above and also parse your data through the different scripts. 

## Quarto blog
- We also learned to set up this blog! 

- Quarto allows you to write text and code into the same document and render into a few different formats such as webpages, blogs (!), docx and pdf. 



## Here are some samples of code

- here is a python example:

```{python}
# A simple Python example
greeting = "Hello, world!"
print(greeting)

# Some basic math
numbers = [1, 2, 3, 4, 5]
total = sum(numbers)
print(f"The sum is: {total}")
```

- and this is a R example! 

```{R}
data(mtcars)
head(mtcars)
```
## Next Steps

That's all for today!

