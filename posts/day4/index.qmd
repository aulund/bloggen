---
title: "Day 4 of MedBioInfo"
date: 2025-10-09
categories: [medbioinfo, learning, data-science, nf-core]
author: "August Lundholm"
description: "Day 4 - nf-core pipelines and RNAseq analysis"
draft: false
---

# Day 4 of MedBioInfo

Today we moved from basic Nextflow to more advanced pipeline usage with real biological data.

## Today's Focus

Today we worked with:
- nf-core pipeline introduction and evaluation
- Testing pipelines with built-in test data  
- Running the nf-core/rnaseq pipeline on real data

## Morning Session - nf-core Introduction

### What makes nf-core special?

The nf-core community provides:
- Standardized pipelines for many bioinformatics workflows
- Extensive documentation following consistent guidelines
- Automatic input validation through the nf-core launcher
- Consistent structure across all pipelines
- Open source development by volunteer community

### Finding and Evaluating Pipelines

We explored the [nf-core homepage](https://nf-co.re/) and learned to evaluate pipelines by checking:
- Usage documentation - understanding input requirements
- Parameters - available customization options  
- Output - expected results and file formats
- Pipeline suitability for our specific data types

## Afternoon Session - Hands-on Pipeline Testing

### Setting Up the Environment

First, we created a dedicated pixi environment for nf-core work:

```bash
pixi init nextflow_test -c conda-forge -c bioconda
cd nextflow_test
pixi add nextflow nf-core
```

### Testing the Setup

We verified our installation worked correctly:

```bash
pixi run nextflow -version
pixi run nf-core --help
pixi run nextflow run hello
```

Expected output:
```
N E X T F L O W
version 25.04.7 build 5955
created 08-09-2025 13:29 UTC (15:29 CEST)
cite doi:10.1038/nbt.3820
http://nextflow.io
```

### Configuration Profile Setup

We downloaded the HPC2N configuration file for server-specific settings:

```bash
wget https://raw.githubusercontent.com/hpc2n/intro-course/master/exercises/NEXTFLOW/INTERACTIVE/hpc2n.config
```

Key configuration parameters:
- `max_memory = 128.GB`
- `max_cpus = 28` 
- `max_time = 168.h`
- `executor = 'slurm'`

### Running Test Pipeline

We tested the Sarek variant calling pipeline with built-in test data:

```bash
pixi run nextflow run nf-core/sarek -profile test --outdir sarek_test -c hpc2n.config
```

Command breakdown:
- `pixi run` - Use our pixi environment
- `nextflow run` - Execute with Nextflow
- `nf-core/sarek` - Pipeline name/location
- `-profile test` - Use built-in test data
- `--outdir sarek_test` - Output directory
- `-c hpc2n.config` - Server configuration file

The test run completed in ~3.5 minutes, demonstrating successful setup.

## Advanced Topic - RNAseq Pipeline

### Data Preparation

For real analysis, we worked with RNAseq data located at:
```
medbioinfo2025/common_data/RNAseq
```

We created symbolic links to organize our data:

```bash
mkdir data
cd data
ln -s ../../common_data/RNAseq/*.fastq.gz .
cd ..
```

Project structure:
```
.
├── data
│   ├── SRR5223504_1.fastq.gz -> ../../common_data/RNAseq/SRR5223504_1.fastq.gz
│   ├── SRR5223504_2.fastq.gz -> ../../common_data/RNAseq/SRR5223504_2.fastq.gz
│   ├── SRR5223517_1.fastq.gz -> ../../common_data/RNAseq/SRR5223517_1.fastq.gz
│   └── ... (additional samples)
├── pixi.lock
└── pixi.toml
```

### nf-core Launch Configuration

We used the nf-core launcher to configure the RNAseq pipeline:

1. **Working and results directories** - Set absolute paths
2. **Input CSV file** - Created samplesheet according to pipeline requirements  
3. **Reference genome** - used human genome references
4. **Resume option** - Enabled for fault tolerance

### Running the Full Pipeline

Two execution methods:

#### Direct execution:
```bash
pixi run nextflow run nf-core/rnaseq -r 3.19.0 -resume -params-file nf-params.json -c hpc2n.config
```

#### Batch submission:
```bash
#!/bin/bash -l
#SBATCH -A our_proj_allocation
#SBATCH -n 5
#SBATCH -t 24:00:00

/your_home_directory/.pixi/bin/pixi run nextflow run nf-core/rnaseq -r 3.19.0 -params-file /your_path/nf-params.json -c server.config
```


## Resources and References

- [nf-core homepage](https://nf-co.re/)
- [nf-core/rnaseq pipeline](https://nf-co.re/rnaseq/3.19.0/)
- [nf-core/sarek pipeline](https://nf-co.re/sarek/3.4.2/)

---

**Day 4 complete!**